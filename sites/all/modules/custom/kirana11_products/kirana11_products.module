<?php
/**
 * @file
 * Code for the Kirana11 Products feature.
 */

include_once 'kirana11_products.features.inc';

/**
 * Implements hook_form_alter().
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function kirana11_products_form_alter(&$form, &$form_state, $form_id){
    if (isset($form_state['view']) && $form_state['view']->name == 'category_products' && $form_id == 'views_exposed_form') {
        global $base_url;
        $link = url(current_path());
        $form['#action'] = $base_url . '/'.$link;
    }

    if ($form['#id'] == 'views-exposed-form-products-search-page') {
        $form['search_text']['#placeholder'] = t('Search Products...');
    }
}

/**
 * Function to get all the Category terms.
 * @param $tid
 */
function _get_taxonomy_tree($tid){
    $term = taxonomy_term_load($tid);
    $terms = taxonomy_get_tree($term->vid);

    $main_term_list =   get_sibilings($terms, 0);

    foreach ($main_term_list as &$item) {
        $item['children'] = get_sibilings($terms, $item['tid']);
    }

    foreach ($main_term_list as &$first_level) {
        foreach ($first_level['children'] as &$second_level) {
            $second_level['children'] = get_sibilings($terms, $second_level['tid']);
        }
    }

    olLiTree($main_term_list, 0);

}

function get_sibilings($terms, $parent) {
    $temp_list = [];

    foreach($terms as $term) {
        if ($term->parents[0] == $parent) {
            $temp_list[] = ['tid' => $term->tid, 'name' => $term->name, 'children' => []];
        }
    }

    return $temp_list;
}

function olLiTree( $tree, $level) {
 
  echo '<ul class="menu_level_' . ++$level . '">';

  foreach ( $tree as $item ) {        
    if($level == '3') {
      $path = drupal_get_path_alias('taxonomy/term/' . $item['tid']);
      echo "<li><a href='/" . $path . "' id='$item[tid]' class='$item[tid]' data-level='$level'>$item[name]</a>";
    } else {
      echo "<li><a href='javascript:' id='$item[tid]' class='$item[tid]' data-level='$level'>$item[name]</a>";
    }

    if (isset( $item['children'])  && count($item['children'])) {
      olLiTree( $item['children'], $level );
    }
    
    echo "</li>";
  }

  echo '</ul>';
  --$level;
}

/**
 * Implements hook_preprocess_views_view().
 * @param type $vars
 *
 */
function kirana11_products_preprocess_views_view(&$vars)
{
    /*if ($vars['view']->name == 'store_products') {
        // get var from GET
        $obj_type = $_GET['category_id'];
        //echo "<pre>";print_r($obj_type);exit;
        if (isset($obj_type)) {
            // obj_type is the taxonomy term, get taxonomy term name
            $tax_name = taxonomy_term_load($obj_type[0])->name;
            //echo "<pre>";print_r($tax_name);
            //echo $tax_name->name;
            // if taxonomy term have parents
            $tax_parent = taxonomy_get_parents_all($obj_type);
            if (isset($tax_parent[1])) {
                // add parent name to taxonomy term name
                $tax_name = $tax_parent[1]->name . ', ' . $tax_name;
            }
            //update title
            $vars['view']->build_info['title'] = $tax_name;
        }
    }*/

    //Store Products Page
    if ($vars['view']->name == 'store_products') {
        if(isset($_GET['deals'])){
            $vars['view']->build_info['title'] = 'Deals of the Day';
        }
    }

    //Product Search Page
    if ($vars['view']->name == 'products_search') {
        if(isset($_GET['search_text']) && !empty($_GET['search_text'])){
            $view_title = $_GET['search_text'];
        }else {
            $view_title = "Product Search";
        }

        $vars['view']->build_info['title'] = $view_title . ' ('. $vars['view']->total_rows . ' results)';
    }
}